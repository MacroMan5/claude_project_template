{
    "name": "Professional Claude Code Commands Suite",
    "description": "Essential command set for professional development workflows with Claude Code",
    "version": "6.0.0",
    "commands": [
        {
            "name": "🚀 Feature Development (SPARC)",
            "command": "@.claude/prompts/development/feature-development.md",
            "description": "Implement new feature using SPARC methodology",
            "category": "development",
            "shortcut": "Ctrl+Shift+F",
            "mcp": [
                "filesystem",
                "sequential-thinking"
            ]
        },
        {
            "name": "🧪 TDD Unit Testing",
            "command": "@.claude/prompts/testing/unit-testing.md",
            "description": "Create unit tests following TDD principles",
            "category": "testing",
            "shortcut": "Ctrl+Shift+U",
            "mcp": [
                "filesystem"
            ]
        },
        {
            "name": "🔗 Integration Testing",
            "command": "@.claude/prompts/testing/integration-testing.md",
            "description": "Write comprehensive integration tests",
            "category": "testing",
            "shortcut": "Ctrl+Shift+I",
            "mcp": [
                "filesystem"
            ]
        },
        {
            "name": "🖥️ UI Testing",
            "command": "@.claude/prompts/testing/ui-testing.md",
            "description": "Create UI tests with automated testing tools",
            "category": "testing",
            "mcp": [
                "filesystem"
            ]
        },
        {
            "name": "🏗️ System Architecture Design",
            "command": "@.claude/prompts/architecture/system-design.md",
            "description": "Design scalable system architecture",
            "category": "architecture",
            "shortcut": "Ctrl+Shift+A",
            "mcp": [
                "filesystem",
                "sequential-thinking"
            ]
        },
        {
            "name": "🔒 Security Audit",
            "command": "@.claude/prompts/security/security-audit.md",
            "description": "Comprehensive security vulnerability assessment",
            "category": "security",
            "shortcut": "Ctrl+Shift+S",
            "mcp": [
                "filesystem",
                "sequential-thinking"
            ]
        },
        {
            "name": "✨ Code Quality Check",
            "command": "@.claude/prompts/workflow/code-quality.md",
            "description": "Comprehensive code quality automation",
            "category": "quality",
            "shortcut": "Ctrl+Shift+Q",
            "mcp": [
                "filesystem",
                "sequential-thinking"
            ]
        },
        {
            "name": "🧪 Run Tests",
            "command": "npm test",
            "description": "Run test suite",
            "category": "testing",
            "shortcut": "Ctrl+Shift+T"
        },
        {
            "name": "🚀 Start Development Server",
            "command": "npm run dev",
            "description": "Launch development environment",
            "category": "app",
            "shortcut": "Ctrl+Shift+R"
        },
        {
            "name": "🏗️ Build Project",
            "command": "npm run build",
            "description": "Build for production",
            "category": "app"
        },
        {
            "name": "🔍 Lint Code",
            "command": "npm run lint",
            "description": "Run linting checks",
            "category": "quality",
            "shortcut": "Ctrl+Shift+L"
        },
        {
            "name": "🎨 Format Code",
            "command": "npm run format || prettier --write .",
            "description": "Auto-format code",
            "category": "quality",
            "shortcut": "Ctrl+Alt+F"
        },
        {
            "name": "🏗️ Create Feature Branch",
            "command": "git checkout -b feature/$1",
            "description": "Create new feature branch",
            "category": "git"
        },
        {
            "name": "📊 Git Statistics",
            "command": "git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short",
            "description": "Visual git history",
            "category": "git"
        },
        {
            "name": "🔍 Search Git History",
            "command": "git log -S \"$1\" --oneline",
            "description": "Search for code changes in history",
            "category": "git"
        },
        {
            "name": "📊 Generate Coverage Report",
            "command": "npm run test:coverage || jest --coverage",
            "description": "Generate test coverage report",
            "category": "reports"
        },
        {
            "name": "🧹 Clean Build Artifacts",
            "command": "rm -rf node_modules/.cache dist build .next out coverage",
            "description": "Remove generated files and caches",
            "category": "cleanup"
        },
        {
            "name": "🐳 Docker Build",
            "command": "docker build -t ${PWD##*/}:latest .",
            "description": "Build Docker image for current project",
            "category": "docker",
            "shortcut": "Ctrl+Shift+B"
        },
        {
            "name": "🐳 Docker Compose Up",
            "command": "docker-compose up -d",
            "description": "Start all services with Docker Compose",
            "category": "docker"
        },
        {
            "name": "🐳 Docker Compose Down",
            "command": "docker-compose down",
            "description": "Stop all Docker Compose services",
            "category": "docker"
        },
        {
            "name": "🔐 Security Scan",
            "command": "npm audit --audit-level=moderate",
            "description": "Scan for security vulnerabilities",
            "category": "security"
        },
        {
            "name": "🌍 Environment Setup",
            "command": "cp .env.example .env && npm install",
            "description": "Set up development environment",
            "category": "setup"
        },
        {
            "name": "📦 Package Update",
            "command": "npm update && npm audit fix",
            "description": "Update packages and fix vulnerabilities",
            "category": "maintenance"
        },
        {
            "name": "📦 Package Outdated",
            "command": "npm outdated",
            "description": "Check for outdated packages",
            "category": "maintenance"
        },
        {
            "name": "🔍 Code Search",
            "command": "rg -n --type-add 'web:*.{html,js,ts,jsx,tsx,vue,svelte}' --type web '$1'",
            "description": "Search code with ripgrep",
            "category": "search"
        }
    ],
    "shortcuts": {
        "Ctrl+Shift+F": "🚀 Feature Development (SPARC)",
        "Ctrl+Shift+U": "🧪 TDD Unit Testing",
        "Ctrl+Shift+I": "🔗 Integration Testing",
        "Ctrl+Shift+A": "🏗️ System Architecture Design",
        "Ctrl+Shift+S": "🔒 Security Audit",
        "Ctrl+Shift+Q": "✨ Code Quality Check",
        "Ctrl+Shift+T": "🧪 Run Tests",
        "Ctrl+Shift+R": "🚀 Start Development Server",
        "Ctrl+Shift+L": "🔍 Lint Code",
        "Ctrl+Alt+F": "🎨 Format Code",
        "Ctrl+Shift+B": "🐳 Docker Build"
    },
    "categories": {
        "development": "💻 Development",
        "testing": "🧪 Testing",
        "architecture": "🏗️ Architecture",
        "security": "🔒 Security",
        "deployment": "🚀 Deployment",
        "documentation": "📝 Documentation",
        "workflow": "🔄 Workflow",
        "app": "🚀 Application",
        "quality": "✨ Code Quality",
        "git": "🐙 Git",
        "reports": "📊 Reports",
        "cleanup": "🧹 Cleanup",
        "docker": "🐳 Docker",
        "setup": "🌍 Environment",
        "maintenance": "📦 Maintenance",
        "search": "🔍 Search"
    },
    "notes": {
        "prompts": "5 essential professional prompts in .claude/prompts/",
        "hooks": "14 automated hooks provide enhanced productivity",
        "shortcuts": "Keyboard shortcuts work in Claude Code interface",
        "customization": "Commands are ready-to-use but can be customized per project"
    }
}